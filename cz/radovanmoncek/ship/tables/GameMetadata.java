// automatically generated by the FlatBuffers compiler, do not modify

package cz.radovanmoncek.ship.tables;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.Table;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;

/**
 *Game metadata
 */
@SuppressWarnings("unused")
public final class GameMetadata extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_25_2_10(); }
  public static GameMetadata getRootAsGameMetadata(ByteBuffer _bb) { return getRootAsGameMetadata(_bb, new GameMetadata()); }
  public static GameMetadata getRootAsGameMetadata(ByteBuffer _bb, GameMetadata obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public GameMetadata __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public byte gameStatus() { int o = __offset(4); return o != 0 ? bb.get(o + bb_pos) : 0; }
  public String gameCode() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer gameCodeAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer gameCodeInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  public long length() { int o = __offset(8); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }

  public static int createGameMetadata(FlatBufferBuilder builder,
      byte gameStatus,
      int gameCodeOffset,
      long length) {
    builder.startTable(3);
    GameMetadata.addLength(builder, length);
    GameMetadata.addGameCode(builder, gameCodeOffset);
    GameMetadata.addGameStatus(builder, gameStatus);
    return GameMetadata.endGameMetadata(builder);
  }

  public static void startGameMetadata(FlatBufferBuilder builder) { builder.startTable(3); }
  public static void addGameStatus(FlatBufferBuilder builder, byte gameStatus) { builder.addByte(0, gameStatus, 0); }
  public static void addGameCode(FlatBufferBuilder builder, int gameCodeOffset) { builder.addOffset(1, gameCodeOffset, 0); }
  public static void addLength(FlatBufferBuilder builder, long length) { builder.addLong(2, length, 0L); }
  public static int endGameMetadata(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public GameMetadata get(int j) { return get(new GameMetadata(), j); }
    public GameMetadata get(GameMetadata obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

