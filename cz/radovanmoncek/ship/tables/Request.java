// automatically generated by the FlatBuffers compiler, do not modify

package cz.radovanmoncek.ship.tables;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.Table;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;

/**
 *Request from players
 */
@SuppressWarnings("unused")
public final class Request extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_25_2_10(); }
  public static Request getRootAsRequest(ByteBuffer _bb) { return getRootAsRequest(_bb, new Request()); }
  public static Request getRootAsRequest(ByteBuffer _bb, Request obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public Request __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Player player() { return player(new Player()); }
  public Player player(Player obj) { int o = __offset(4); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public String gameCode() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer gameCodeAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer gameCodeInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  public byte gameStatus() { int o = __offset(8); return o != 0 ? bb.get(o + bb_pos) : 0; }

  public static int createRequest(FlatBufferBuilder builder,
      int playerOffset,
      int gameCodeOffset,
      byte gameStatus) {
    builder.startTable(3);
    Request.addGameCode(builder, gameCodeOffset);
    Request.addPlayer(builder, playerOffset);
    Request.addGameStatus(builder, gameStatus);
    return Request.endRequest(builder);
  }

  public static void startRequest(FlatBufferBuilder builder) { builder.startTable(3); }
  public static void addPlayer(FlatBufferBuilder builder, int playerOffset) { builder.addOffset(0, playerOffset, 0); }
  public static void addGameCode(FlatBufferBuilder builder, int gameCodeOffset) { builder.addOffset(1, gameCodeOffset, 0); }
  public static void addGameStatus(FlatBufferBuilder builder, byte gameStatus) { builder.addByte(2, gameStatus, 0); }
  public static int endRequest(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public Request get(int j) { return get(new Request(), j); }
    public Request get(Request obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

